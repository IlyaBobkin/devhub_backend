version: "3.9"
services:
  db:
    container_name: db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: my_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"  # Ограничьте доступ через брандмауэр
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - hh-network

  backend:
    container_name: hh-backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      depends_on:
    db:
      condition: service_healthy
    keycloak:
      condition: service_healthy
  environment:
     DB_HOST: db
     DB_PORT: 5432
     DB_NAME: my_database
       DB_USER: postgres
       DB_PASSWORD: postgres
     KEYCLOAK_URL: http://keycloak:8080
     KC_ADMIN_URL: http://keycloak:8080
     NODE_ENV: production
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
    interval: 10s
    timeout: 5s
    retries: 10
    networks:
      - hh-network

  keycloakdb:
    container_name: keycloak-db
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"  # Ограничьте доступ через брандмауэр
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - hh-network

  keycloak:
    container_name: keycloak
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    environment:
   KC_HOSTNAME_STRICT: false
   KC_HOSTNAME_STRICT_HTTPS: false
   KC_PROXY: edge
   KC_HTTP_ENABLED: true
   KEYCLOAK_ADMIN: admin
   KEYCLOAK_ADMIN_PASSWORD: admin
   KC_DB: postgres
   KC_DB_URL_HOST: keycloakdb
   KC_DB_URL_PORT: 5432
   KC_DB_URL_DATABASE: keycloak
   KC_DB_USERNAME: keycloak
   KC_DB_PASSWORD: password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 20s  # Увеличено
      timeout: 10s  # Увеличено
      retries: 20  # Увеличено
    depends_on:
      keycloakdb:
        condition: service_healthy
    ports:
      - "8086:8080"
    volumes:
      - ./keycloak/config.json:/opt/keycloak/data/import/config.json
    networks:
      - hh-network

networks:
  hh-network:
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  keycloak_data:
